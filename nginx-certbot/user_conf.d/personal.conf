# A bare-bones server config for the main Signal-Server

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    # Domain names this server should respond to.
    server_name chat.middleman.foo;

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/test-name/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/test-name/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/test-name/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

#    return 200 'Let\'s Encrypt certificate successfully installed!';
#    add_header Content-Type text/plain;

    location / {
        proxy_pass http://52.53.112.176:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /signalcaptchas {
        root /usr/share/nginx/html/;
        try_files $uri $uri/ =404;
        index index.html;
    }

}

# A bare-bones server config for registration-service (using gRPC)

server {
     listen 442 ssl http2;
    server_name chat.middleman.foo;

    # Reuse the same certificates
    ssl_certificate         /etc/letsencrypt/live/test-name/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/test-name/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/test-name/chain.pem;
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

#    return 200 'Let\'s Encrypt certificate successfully installed!';
#    add_header Content-Type text/plain;

location / {
        grpc_pass grpcs://52.53.112.176:50051;
    }

}
